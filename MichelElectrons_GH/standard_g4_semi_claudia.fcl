#Correr el modelo semianalitico dentro del volumen activo
#include "PDFastSim_sbnd.fcl"

#include "simulationservices_sbnd.fcl"
#include "largeantmodules_sbnd.fcl"
#include "mcreco.fcl"
#include "rootoutput_sbnd.fcl"
#include "scintillationtime_tool.fcl"

#include "opticalsimparameterisations_sbnd.fcl"
#include "opticalsimparameterisations.fcl"
#include "photpropservices_sbnd.fcl"
process_name: simul

services:
{
    TFileService:            {fileName: "gen_hist.root" }
    TimeTracker:             {}
    MemoryTracker:           {} # default is one
    RandomNumberGenerator: {} #ART native random number generator
   # message:                 @local::standard_info
                             @table::sbnd_g4_services
    FileCatalogMetadata: @local::sbnd_file_catalog_mc
    DetectorHolder:          {}
    ActionHolder:            {}
    PhysicsListHolder:       {}
    PhysicsList: 
    {
        PhysicsListName:                  "QGSP_BERT"
        DumpList:                           true
        enableNeutronLimit:                 false
        NeutronTimeLimit:                   0.0
        NeutronKinELimit:                   0.0
        enableStepLimit:                    true
        enableOptical:                      false
        enableCerenkov:                     false
        CerenkovStackPhotons:               false
        CerenkovMaxNumPhotons:              100
        CerenkovMaxBetaChange:              10.0
        enableScintillation:                false
        ScintillationStackPhotons:          false
        ScintillationByParticleType:        false
        ScintillationTrackInfo:             false
        ScintillationTrackSecondariesFirst: false
        enableAbsorption:                   false
        enableRayleigh:                     false
        enableMieHG:                        false
        enableBoundary:                     false
        enableWLS:                          false
        BoundaryInvokeSD:                   false
        Verbosity:                          1
        WLSProfile:                         delta
    }
    LArG4Detector : 
    {
        category      : "world"
        volumeNames   : ["volTPCActive"] 
        stepLimits    : [0.3] # corresponding stepLimits in mm for the volumes in the volumeNames list

       # volumeNames   : ["volTPCActive","volCryostat"]
       # stepLimits    : [0.3, 0.3] 
       
        gdmlFileName_ : "sbnd_newLArG4_nowires.gdml"

 }
    
    MCTruthEventAction:  
    {
        service_type: "MCTruthEventActionService"
    }
    ParticleListAction:
    {
        service_type:                 "ParticleListActionService"
        EnergyCut:                    1e-5 # Kinetic Energy cut in [MeV]
        keepEMShowerDaughters:        true
        storeTrajectories:            true
        keepGenTrajectories:          ["generator"] # list of generator labels for which we want to store
                                                    # trajectory points. The protodune beam label is simply "generator"
        keepOnlyPrimaryFullTrajectories : false     # (defaults to false in larg4) If set to true, only
                                                    # the particles with MCTruth process == "primary" and
                                                    # their descendants will have the full set of trajetory
                                                    # points stored. Particles descending from primaries with
                                                    # MCTruth process != "primary" will not have a full set
                                                    # of trajectory points stored -- only their start and
                                                    # end points. This filter only applies to the generator
                                                    # labels listed in the keepGenTrajectories. E.g, for the
                                                    # beam generator, no "primaryBackground" particles or their
                                                    # descendants would have a full set of traj. points. if
                                                    # this is set to true.
        SparsifyTrajectories:             true      # call SparsifyTrajectory() method on MCParticles with full trajectories
                                                    # being stored. This helps reduce memory usage in the root output stage
                                                    # if there are many trajectory points.
        SparsifyMargin:                   0.015     # required when SparsifyTrajectories is set to true
    }
}

## -- NuRandomService:
services.NuRandomService.policy:                "perEvent"
#services.LArG4Parameters.UseLitePhotons:        false                #true
services.LArG4Parameters.EnabledPhysics:        [ "Em",
                                                  "FastOptical",         #"Optical",
                                                  "SynchrotronAndGN",
                                                  "Ion",
                                                  "Hadron",
                                                  "Decay",
                                                  "HadronElastic",
                                                  "Stopping",
                                                  "NeutronTrackingCut" ]

source:
{
    module_type: RootInput
    maxEvents:  30000
    fileNames: ["muon.root"]
}

physics:
{
    producers:
    {
        largeant:
        {
            module_type:         "larg4Main"
            enableVisualization:  false
        }
        rns:
        {
            module_type:         "RandomNumberSaver"
        }
        
        IonAndScint:
        {
            module_type:         "IonAndScint"
           # Instances:            "LArG4DetectorServicevolTPCActive;LArG4DetectorServicevolCryostat" # separated by semicolon
            Instances:            "LArG4DetectorServicevolTPCActive"
            ISCalcAlg:            "Correlated" #"NEST"
        }
      

       #Semianalytic  
       # LIB:  @local::sbnd_pdfastsim_par_ar_refl   

      LIB:
    {
       module_type:            "PDFastSimPAR"
       SimulationLabel:        "IonAndScint"
       DoSlowComponent:        true
       ScintTimeTool:          @local::ScintTimeLAr
       module_type:           "PDFastSimPAR"

   DoReflectedLight:      true
   IncludePropTime:       true
   UseLitePhotons:        true
   OpaqueCathode:         true
   OnlyOneCryostat:       false
    VUVTiming:  @local::sbnd_vuv_timing_parameterization
    VISTiming:  @local::sbnd_vis_timing_parameterization
    VUVHits:    @local::sbnd_vuv_RS100cm_hits_parameterization
    VISHits:    @local::sbnd_vis_RS100cm_hits_parameterization  
    }

    }
    
    analyzers:
    {
    }
    
    simulate: [ rns, largeant, IonAndScint, LIB]
    stream1:   [ out1 ]
    trigger_paths: [  simulate ] 
    end_paths:      [ stream1  ]  
}

physics.producers.IonAndScint.SavePriorSCE:      true

outputs:
{
    out1:
    {
        module_type:      RootOutput
        fileName:         "%ifb_ref.root"
        dataTier:         "simulated"
        outputCommands:   [ "keep *"]
        compressionLevel: 1 #zlib argument (0-9) 
    }
}

services.LArG4Parameters.UseLitePhotons:        true   # true = produce SimPhotonsLite and OpDetBacktrackerRecord, false = produce SimPhotons

services.Geometry.GDML: "sbnd_newLArG4.gdml"
services.AuxDetGeometry.GDML: "sbnd_newLArG4.gdml"


#Cargar libreria
services.PhotonVisibilityService.DoNotLoadLibrary: true 

services.LArPropertiesService.ScintPreScale: 1

#Campo Electrico
services.DetectorPropertiesService.Efield:  [ 5e-1, 6.66e-1, 8e-1 ]


